"""
Django settings for ecommerce_tool project.
Generated by 'django-admin startproject' using Django 4.2.19.
For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
from pathlib import Path
import os
from dotenv import load_dotenv
from corsheaders.defaults import default_headers
load_dotenv()
BASE_DIR = Path(__file__).resolve().parent.parent
SECRET_KEY = os.getenv('SECRET_KEY')
DEBUG = True
ALLOWED_HOSTS = ["*"]
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = False
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
     "http://34.195.154.218",
    "http://34.195.154.218",
    "http://192.168.30.191:4200",
    "https://b2bop.netlify.app",
    "https://marketplace-frontend-clone9.vercel.app"
]
CORS_ALLOW_HEADERS = list(default_headers) + [
    'content-type',
    'authorization',
    'x-requested-with',
    'accept',
    'origin',
    'user-agent',
    'x-csrftoken',
]
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    "rest_framework_simplejwt",
    'django_celery_beat',
    'omnisight',
] 
REDIS_HOST=os.getenv("REDIS_HOST",'127.0.0.1')
REDIS_PASSWORD=os.getenv('REDIS_PASSWORD','')
CACHES = {
    'default': {
         "BACKEND": "django_redis.cache.RedisCache",
        'LOCATION': f'redis://:{REDIS_PASSWORD}@{REDIS_HOST}:6379/1',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
    }
}
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'ecommerce_tool.custom_mideleware.customMiddleware'  
]
ROOT_URLCONF = 'ecommerce_tool.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
WSGI_APPLICATION = 'ecommerce_tool.wsgi.application'
from mongoengine import connect
connect(
    db=os.getenv('DATABASE_NAME'),
    host=os.getenv('DATABASE_HOST'),
)
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True
STATIC_URL = 'static/'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
WALMART_API_KEY = os.getenv('WALMART_API_KEY')
WALMART_SECRET_KEY = os.getenv('WALMART_SECRET_KEY')
AMAZON_API_KEY = os.getenv('AMAZON_API_KEY')
AMAZON_SECRET_KEY = os.getenv('AMAZON_SECRET_KEY')
REFRESH_TOKEN = os.getenv('AMAZON_REFRESH_TOKEN')
MARKETPLACE_ID = os.getenv('MARKETPLACE_ID')
SELLER_ID = os.getenv('SELLER_ID')
Role_ARN = os.getenv('Role_ARN')
Acccess_Key = os.getenv('Acccess_Key')
Secret_Access_Key = os.getenv('Secret_Access_Key')
SENDGRID_API_KEY = os.getenv('SENDGRID_API_KEY')
SELLERCLOUD_USERNAME = os.getenv('SELLERCLOUD_USERNAME')
SELLERCLOUD_PASSWORD = os.getenv('SELLERCLOUD_PASSWORD')
SELLERCLOUD_COMPANY_ID = os.getenv('SELLERCLOUD_COMPANY_ID')  
SELLERCLOUD_SERVER_ID = os.getenv('SELLERCLOUD_SERVER_ID')  
SHIPSTATION_API_SECRET=os.getenv("SHIPSTATION_API_SECRET")
SHIPSTATION_API_KEY=os.getenv("SHIPSTATION_API_KEY")
CELERY_BROKER_URL = f'redis://:{REDIS_PASSWORD}@{REDIS_HOST}:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
